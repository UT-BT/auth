:root {
    --utbt-blue: #319CDB;
    --utbt-red: #F42335;
}

.utbt-blue {
    color: var(--utbt-blue);
}

.bg-utbt-blue {
    background-color: var(--utbt-blue);
}

.utbt-red {
    color: var(--utbt-red); 
}

.bg-utbt-red {
    background-color: var(--utbt-red);
}

.btn-utbt-blue {
    background-color: var(--utbt-blue);
    color: white;
}

.btn-utbt-blue:hover {
    background-color: color-mix(in srgb, var(--utbt-blue) 85%, black);
}

.btn-utbt-red {
    background-color: var(--utbt-red);
    color: white;
}

.btn-utbt-red:hover {
    background-color: color-mix(in srgb, var(--utbt-red) 85%, black);
}

.tooltip-container {
    position: relative;
    display: inline-block;
}

.tooltip-text {
    visibility: hidden;
    opacity: 0;
    background-color: #333;
    color: #fff;
    text-align: center;
    border-radius: 6px;
    padding: 8px 12px;
    position: absolute;
    z-index: 10;
    bottom: 115%;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap;
    transition: opacity 0.3s ease, visibility 0.3s ease;
    font-size: 0.875rem;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    pointer-events: none;
}


.tooltip-text::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: #333 transparent transparent transparent;
}


.tooltip-container:hover .tooltip-text {
    visibility: visible;
    opacity: 1;
}

@property --angle {
  syntax: '<angle>';
  inherits: false;
  initial-value: 0deg;
}

@keyframes rotate {
  to {
    --angle: 360deg;
  }
}

.gradient-ring {
  --gradient-color-1: var(--utbt-blue);
  --gradient-color-2: var(--utbt-red);
  --ring-width: 0.5px;
  --ring-offset-width: 2px;
  --animation-speed: 4s;

  position: relative;
  z-index: 0;
  border-radius: 9999px;
}

.gradient-ring::before {
  content: '';
  position: absolute;
  z-index: -1;
  inset: calc(-1 * (var(--ring-offset-width) + var(--ring-width)));
  border-radius: inherit;
  background: conic-gradient(from var(--angle), var(--gradient-color-1), var(--gradient-color-2), var(--gradient-color-1));
  animation: rotate var(--animation-speed) linear infinite;
}

.gradient-ring > img {
    position: relative;
    z-index: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    object-fit: cover;
    border: calc(var(--ring-offset-width) + var(--ring-width)) solid transparent;
    background-clip: padding-box;
}
