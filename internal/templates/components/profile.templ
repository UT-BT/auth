package components

import (
    "github.com/UT-BT/auth/internal/auth/models"
    "strings"

)

func getRoleDescription(role string) string {
    switch strings.ToLower(role) {
    case "admin":
        return "Full system access"
    case "moderator":
        return "Helping maintain community standards"
    case "map_maker":
        return "Creates maps for BunnyTrack"
    case "streamer":
        return "UTBT Content Creator"
    case "player":
        return "UTBT Player"
    default:
        return "Banned from UTBT"
    }
}

func getRoleBadgeClass(role string) string {
    baseClasses := "badge"
    switch strings.ToLower(role) {
    case "admin":
        return baseClasses + " badge-error"
    case "moderator":
        return baseClasses + " badge-warning"
    case "map_maker":
        return baseClasses + " badge-success"
    case "streamer":
        return baseClasses + " badge-secondary"
    default:
        return baseClasses + " badge-primary"
    }
}

func formatRoleName(role string) string {
    words := strings.Split(role, "_")
    for i, word := range words {
        words[i] = strings.Title(strings.ToLower(word))
    }
    return strings.Join(words, " ")
}


templ UserProfile(user *models.User) {
    <script>
        htmx.on('showModal', function(event) {
            const modal = document.getElementById('instructionModal');
            if (modal) {
                let token = '';
                
                if (event.detail && event.detail.token) {
                    token = event.detail.token;
                }
                
                const copyToClipboard = async () => {
                    if (!token) {
                        console.error("No token available to copy");
                        return;
                    }
                    
                    try {
                        await navigator.clipboard.writeText(token);
                    } catch (err) {
                        console.error('Failed to copy token:', err);
                        
                        const alertDiv = document.createElement('div');
                        alertDiv.className = 'alert alert-warning mb-4 flex justify-center items-center flex-col';
                        alertDiv.innerHTML = `
                            <span>Unable to copy automatically. Please copy this token manually:</span>
                            <div class="bg-base-300 p-2 my-2 rounded font-mono text-sm overflow-auto w-full">${token}</div>
                        `;
                        
                        const warningAlert = modal.querySelector('.alert-warning');
                        if (warningAlert && warningAlert.parentNode) {
                            warningAlert.parentNode.insertBefore(alertDiv, warningAlert);
                        }
                    }
                };
                
                copyToClipboard();
                modal.showModal();
            }
        });
    </script>
    <div class="flex flex-col items-center justify-center w-full lg:w-[75%] mx-auto gap-4">
        <div class="flex flex-col items-center">
            <div class="avatar">
                <div class="w-28 h-28 rounded-full gradient-ring p-1 shadow-lg">
                    <img src={user.AvatarURL} alt={user.Username + "'s avatar"} class="rounded-full" />
                </div>
            </div>
            <div class="mt-4 text-center">
                <h1 class="text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-[#ff8fa3] to-[#8cb4ff]">
                    {user.Username}
                </h1>
            </div>
        </div>

        <hr class="w-full my-2" />

        <div class="w-full bg-base-200 rounded-xl shadow-md p-4">
            <h2 class="text-lg font-semibold flex items-center gap-2 justify-center mb-3">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75 11.25 15 15 9.75M21 12c0 1.268-.63 2.39-1.593 3.068a3.745 3.745 0 0 1-1.043 3.296 3.745 3.745 0 0 1-3.296 1.043A3.745 3.745 0 0 1 12 21c-1.268 0-2.39-.63-3.068-1.593a3.746 3.746 0 0 1-3.296-1.043 3.745 3.745 0 0 1-1.043-3.296A3.745 3.745 0 0 1 3 12c0-1.268.63-2.39 1.593-3.068a3.745 3.745 0 0 1 1.043-3.296 3.746 3.746 0 0 1 3.296-1.043A3.746 3.746 0 0 1 12 3c1.268 0 2.39.63 3.068 1.593a3.746 3.746 0 0 1 3.296 1.043 3.746 3.746 0 0 1 1.043 3.296A3.745 3.745 0 0 1 21 12Z" />
                </svg>
                Roles
            </h2>
            <div class="flex flex-wrap gap-2 justify-center">
                for _, role := range user.Roles {
                    <div class={getRoleBadgeClass(role) + " tooltip tooltip-bottom flex items-center px-3 py-2"} data-tip={getRoleDescription(role)}>
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 mr-1 inline-block">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M4.26 10.147a60.438 60.438 0 0 0-.491 6.347A48.62 48.62 0 0 1 12 20.904a48.62 48.62 0 0 1 8.232-4.41 60.46 60.46 0 0 0-.491-6.347m-15.482 0a50.636 50.636 0 0 0-2.658-.813A59.906 59.906 0 0 1 12 3.493a59.903 59.903 0 0 1 10.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.717 50.717 0 0 1 12 13.489a50.702 50.702 0 0 1 7.74-3.342M6.75 15a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm0 0v-3.675A55.378 55.378 0 0 1 12 8.443m-7.007 11.55A5.981 5.981 0 0 0 6.75 15.75v-1.5" />
                        </svg>
                        <span>{formatRoleName(role)}</span>
                    </div>
                }
            </div>
        </div>

        if user.RegisteredHWID != "" {
            <div class="w-full bg-base-200 rounded-xl shadow-md p-4">
                <h2 class="text-lg font-semibold flex items-center gap-2 justify-center mb-3">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M7.864 4.243A7.5 7.5 0 0 1 19.5 10.5c0 2.92-.556 5.709-1.568 8.268M5.742 6.364A7.465 7.465 0 0 0 4.5 10.5a7.464 7.464 0 0 1-1.15 3.993m1.989 3.559A11.209 11.209 0 0 0 8.25 10.5a3.75 3.75 0 1 1 7.5 0c0 .527-.021 1.049-.064 1.565M12 10.5a14.94 14.94 0 0 1-3.6 9.75m6.633-4.596a18.666 18.666 0 0 1-2.485 5.33" />
                    </svg>
                    Hardware ID
                </h2>
                <div class="flex flex-col items-center gap-2">
                    <div id="hwid-display" class="font-mono text-base opacity-60 bg-base-300 p-2 rounded-lg">
                        • • • • • • • • • • • •
                    </div>
                    <div class="flex items-center gap-2">
                        <button
                            id="show-hwid-btn"
                            class="btn btn-sm btn-ghost gap-1"
                            hx-get="/api/hwid"
                            hx-target="#hwid-display"
                            hx-swap="innerHTML"
                            hx-trigger="click"
                            hx-on:click="this.classList.add('hidden'); document.getElementById('hide-hwid-btn').classList.remove('hidden'); document.getElementById('hwid-display').classList.remove('opacity-60')"
                        >
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z" />
                                <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                            </svg>
                            <span>Show ID</span>
                        </button>
                        <button
                            id="hide-hwid-btn"
                            class="btn btn-sm btn-ghost gap-1 hidden"
                            hx-trigger="click"
                            hx-on:click="this.classList.add('hidden'); document.getElementById('show-hwid-btn').classList.remove('hidden'); document.getElementById('hwid-display').classList.add('opacity-60'); document.getElementById('hwid-display').innerHTML = '• • • • • • • • • • • •';"
                        >
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M3.98 8.223A10.477 10.477 0 001.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.45 10.45 0 0112 4.5c4.756 0 8.773 3.162 10.065 7.498a10.523 10.523 0 01-4.293 5.774M6.228 6.228L3 3m3.228 3.228l3.65 3.65m7.894 7.894L21 21m-3.228-3.228l-3.65-3.65m0 0a3 3 0 10-4.243-4.243m4.242 4.242L9.88 9.88" />
                            </svg>
                            <span>Hide ID</span>
                        </button>
                    </div>
                </div>
            </div>
        }

        <div class="w-full space-y-3 mt-2">
            if user.RegisteredHWID != "" && user.GameToken != "" {
                <button
                    class="btn btn-primary w-full shadow-md gap-2"
                    hx-get="/api/game-token"
                    hx-trigger="click"
                    hx-swap="none"
                >
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184" />
                    </svg>
                    Copy Game Server Token
                </button>
            } else {
                <div class="tooltip w-full" data-tip="Open the login page from your game in order to get your game token!">
                    <button
                        class="btn btn-primary w-full shadow-md opacity-50 cursor-not-allowed gap-2"
                        disabled
                    >
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184" />
                        </svg>
                        Copy Game Server Token
                    </button>
                </div>
            }
            <a
                href="/logout"
                class="btn btn-error w-full shadow-md gap-2"
                hx-boost="true"
            >
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 9V5.25A2.25 2.25 0 0 0 13.5 3h-6a2.25 2.25 0 0 0-2.25 2.25v13.5A2.25 2.25 0 0 0 7.5 21h6a2.25 2.25 0 0 0 2.25-2.25V15m3 0 3-3m0 0-3-3m3 3H9" />
                </svg>
                Logout
            </a>
        </div>
    </div>
} 